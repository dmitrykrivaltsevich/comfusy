// Tri - Partition
// - Normal        :  106
// - Z3 per node :  117
// 

A == (B1 ++ B2 ++ B3)  &&
B1 << B2 &&
B2 << B3 &&
|B1| = |B2| &&
|B2| = |B3| && 
|A|   = 12   &&
inf(A)   =   1 &&
sup(A) = 12


  # conjunctions       : 1
  Naive Bell numbers  : List(2)
Transitive Closure
  # complete orderings : 78
Min / max
  # complete orderings : 4
Z3 at nodes
  # partial orderings   : 109
  # complete orderings : 19
  z3 execution time[ms] : 3772
Min/max WITH  Z3 at nodes
  # partial orderings   : 13
  # complete orderings : 2
  z3 execution time[ms] : 473





// Paper example 1
// Find 'element' in 'Node(Left, value, Right)''
//                   when 'element < value'
// - Normal        :  24
// - Z3 per node :  37
// 
!( (
      sup(Left) < value &&
      value < inf(Right) &&
      element < value
   ) =>(
       element in (Left ++ Value ++ Right)
              <=> 
       element in Left
)  ) 
&& {value} == Value


  # conjunctions       : 4
  Naive Bell numbers  : List(2, 2, 2, 2)
Transitive Closure
  # complete orderings : 20
Min / max
  # complete orderings : 18
Z3 at nodes
  # partial orderings   : 37
  # complete orderings : 3
  z3 execution time[ms] : 1538
Min/max WITH  Z3 at nodes
  # partial orderings   : 29
  # complete orderings : 3
  z3 execution time[ms] : 1494
  
  
  
// Paper Example 2, with inf(C) = inf(L) && sup(C) = sup(R)
  !(
  (C == L ++ {v} ++ R &&
   sup(L) < v &&
   v < inf(R))=>
   ({v} == lrange(C,card(L)+1, card(L)+1)))

  
    # conjunctions       : 1
  Naive Bell numbers  : List(9)
Transitive Closure
  # complete orderings : 130
Min / max
  # complete orderings : 130
Z3 at nodes
  # partial orderings   : ??
  # complete orderings : ??
  z3 execution time[ms] : -
Min/max WITH  Z3 at nodes
  # partial orderings   : ??
  # complete orderings : ??
  z3 execution time[ms] : -
  
  
  

// Paper Example 3
// - Normal        :   120
// - Z3 per node :   81
//
!( (
      ( OldAbove == {} || pivot < inf( OldAbove )) &&
      !( e <= pivot ) &&
      NewAbove == ( OldAbove ++ {e} )
   )
   => pivot < inf( NewAbove )
)


  # conjunctions       : 2
  Naive Bell numbers  : List(3, 2)
Transitive Closure
  # complete orderings : 106
Min / max
  # complete orderings : 28
Z3 at nodes
  # partial orderings   : 66
  # complete orderings : 14
  z3 execution time[ms] : 411
Min/max WITH  Z3 at nodes
  # partial orderings   : 18
  # complete orderings : 0
  z3 execution time[ms] : 82







// Add large value to set
// - Normal        :   42
// - Z3 per node :   69
//
!( (  
      NewSet == ( OldSet ++ {large} ) &&
      large >= sup(OldSet)
   )
   =>  sup(NewSet) = large
)


  # conjunctions       : 1
  Naive Bell numbers  : List(2)
Transitive Closure
  # complete orderings : 38
Min / max
  # complete orderings : 8
Z3 at nodes
  # partial orderings   : 41
  # complete orderings : 15
  z3 execution time[ms] : 348
Min/max WITH  Z3 at nodes
  # partial orderings   : 9
  # complete orderings : 4
  z3 execution time[ms] : 56
  

  
  
  

// Add large value to set (bogus 1)
// - Normal        :  20
// - Z3 per node :  29
//
!(
   (  
     NewSet == ( OldSet ++ {large} ) &&
      large >= sup(OldSet)
   )
   =>  sup(NewSet) > sup(OldSet)
)


  # conjunctions       : 1
  Naive Bell numbers  : List(2)
Transitive Closure
  # complete orderings : 14
Min / max
  # complete orderings : 2
Z3 at nodes
  # partial orderings   : 15
  # complete orderings : 4
  z3 execution time[ms] : 122
Min/max WITH  Z3 at nodes
  # partial orderings   : 3
  # complete orderings : 2
  z3 execution time[ms] : 10
  
  
  
  
  
  
  

// Add large value to set (bogus 2)
// - Normal        :  115
// - Z3 per node :  182
//
!( (  
      NewSet == ( OldSet ++ {large} ) &&
      large >= sup(OldSet) - 1
   )
   =>  sup(NewSet) = large
)


  # conjunctions       : 1
  Naive Bell numbers  : List(3)
Transitive Closure
  # complete orderings : 99
Min / max
  # complete orderings : 20
Z3 at nodes
  # partial orderings   : 109
  # complete orderings : 44
  z3 execution time[ms] : 783
Min/max WITH  Z3 at nodes
  # partial orderings   : 23
  # complete orderings : 10
  z3 execution time[ms] : 134




// Unequal partition
//
!(( 
      Set == (Elem ++ Rest) &&
      elem >= sup(Rest)
   )
    => sup(Set) = elem
) && Elem == {elem}


  # conjunctions       : 1
  Naive Bell numbers  : List(2)
Transitive Closure
  # complete orderings : 36
Min / max
  # complete orderings : 12
Z3 at nodes
  # partial orderings   : 40
  # complete orderings : 15
  z3 execution time[ms] : 790
Min/max WITH  Z3 at nodes
  # partial orderings   : 13
  # complete orderings : 8
  z3 execution time[ms] : 264







// Zig-Zig transformation in red-balck trees
//
!((      sup(LeftTree) < value1 &&
   value1 < inf(MiddleTree) &&
   (LeftTree ++ Value1 ++ MiddleTree) << Value2 &&
   value1 < value2 &&
   value2 < inf(RightTree)
 ) => (
   inf(LeftTree) < value1 &&
   Value1 slt (MiddleTree ++ Value2 ++ RightTree) &&
   sup(MiddleTree) < value2 &&
   value2 < inf(RightTree)
 )
 ) && (Value1 seq {value1}) && (Value2 seq {value2}) 
 
  
    # conjunctions       : 4
  Naive Bell numbers  : List(2, 4)
Transitive Closure
  # complete orderings : > 100000
Min / max
  # complete orderings : 64
Z3 at nodes
  # partial orderings      : ??
  # complete orderings :  ??
  z3 execution time[ms] : -
Min/max WITH  Z3 at nodes
  # partial orderings   : 103
  # complete orderings : 0
  z3 execution time[ms] : 82281
  
  
  
  
  
// Two ways for deterministic partitioning
// (we used this for our transformations ^^)
!( (
      A ++ B == C &&
      A << B
   ) <=> (
      A subseteq C &&
      B == C -- A &&
      A << B
)  )


  # conjunctions       : 10
  Naive Bell numbers  : List(1, 1, 1, 1, 1, 1)
Transitive Closure
  # complete orderings : 6
Min / max
  # complete orderings : 6
Z3 at nodes
  # partial orderings   : 8
  # complete orderings : 1
  z3 execution time[ms] : 143
Min/max WITH  Z3 at nodes
  # partial orderings   : 8
  # complete orderings : 1
  z3 execution time[ms] : 53
  
  
  


// fun with qfBAPA (1 ordering, pure BAPA)
|ALL| = 10 &&
|Set1| = |Set2| &&
Set1 == compl( Set2 )

  # conjunctions       : 1
  Naive Bell numbers  : List()
Transitive Closure
  # complete orderings : 1
Min / max
  # complete orderings : 1
Z3 at nodes
  # complete orderings : 1
Min/max WITH  Z3 at nodes
  # complete orderings : 1
  


// Byzantine Fault Tolerant example: (1 ordering, pure BAPA)
!((
      n > 3 &&
      f > 0 &&
      n > f * 3 &&
      card(Servers) = n &&
      (Byz subseteq Servers) &&
      |Byz| = f &&
      (Corr seq Servers -- Byz) &&
      (S subseteq  Servers) &&
      |S| > f
    ) => (
      |Corr ** S| > 0
    ))