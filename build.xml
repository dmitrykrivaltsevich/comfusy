<?xml version="1.0" encoding="UTF-8" ?>

<project name="Synthesis Plugin for scalac" default="dist" basedir=".">
    <description>
        Build file for the Synthesis plugin for scalac.
    </description>

    <!-- The settings can be overridden in local.properties. -->
    <property environment="env" />
    <property name="scala.home" value="${env.SCALA_HOME}" />
    <property name="scala-library.jar" value="${scala.home}/lib/scala-library.jar" />
    <property name="scala-compiler.jar" value="${scala.home}/lib/scala-compiler.jar" />

    <property name="base.dir" value="${basedir}" /> 
    <property name="sources.dir" value="${base.dir}/src" />
    <property name="dist.dir" value="${base.dir}/dist" />
    <property name="lib.dir" value="${basedir}/lib" /> 
    <property name="build.dir" value="${base.dir}/bin" />

    <!-- other properties -->
    <property name="dist.jar" value="${dist.dir}/synthesis-plugin.jar" />
    <property name="scalac.script.file" value="${base.dir}/scalac-synthesis" />
    <property name="scala.script.file" value="${base.dir}/scala-synthesis" />
    <property name="scalac.default.params" value="-deprecation -unchecked" />
    <property name="scalac.synthesis.plugin" value="-Xplugin:${dist.jar} ${scalac.default.params}"/> 

    <!-- libs -->
    <property name="scalatest.jar" value="${lib.dir}/scalatest-1.0.jar" />

    <!-- required to use the tasks scalac, fsc and scaladoc -->
    <taskdef resource="scala/tools/ant/antlib.xml">
        <classpath>
            <pathelement location="${scala-compiler.jar}"  />
            <pathelement location="${scala-library.jar}"  />
        </classpath>
    </taskdef>

    <!-- classpath definitions -->
    <path id="scalac.class.path">
        <pathelement location="${scala-library.jar}"  />
        <pathelement location="${scala-compiler.jar}"  />
    </path>

    <path id="build.path">
        <path refid="scalac.class.path"/>
        <pathelement location="${scalatest.jar}" />
        <pathelement location="${build.dir}"  />
    </path>

    <!-- phases definitions -->
    <target name="compile" description="compiles the files">
        <mkdir dir="${build.dir}"  />
        <scalac srcdir="${sources.dir}" destdir="${build.dir}" force="changed" addparams="${scalac.default.params}">
            <classpath>
                <path refid="build.path" />
            </classpath>
            <!-- <exclude name="**/APA*.scala" /> -->
            <exclude name="**/decision/*.scala" />
            <exclude name="**/PASynthesisTest.scala" />
            <exclude name="**/bapa/Examples.scala" />
            <exclude name="**/bapa/Printer.scala" />
            <exclude name="**/bapa/Main.scala" />
        </scalac>
    </target>

    <target name="dist" depends="compile" description="build the plugin jar file and a script to use it">
        <mkdir dir="${dist.dir}" />

        <manifest file="${dist.dir}/MANIFEST.MF">
            <attribute name="Built-By" value="lara.epfl.ch" />
        </manifest>

        <jar destfile="${dist.jar}" manifest="${dist.dir}/MANIFEST.MF">
            <fileset dir="${build.dir}" />
            <fileset file="./scalac-plugin.xml" />
        </jar>

        <echo file="${scalac.script.file}" message="#!/bin/sh${line.separator}scalac -Xplugin:${dist.jar} -classpath ${dist.jar} $@${line.separator}" />
        <chmod file="${scalac.script.file}" perm="u+x" />
        <echo file="${scala.script.file}" message="#!/bin/sh${line.separator}scala -classpath .:${dist.jar} $@${line.separator}" />
        <chmod file="${scala.script.file}" perm="u+x" />
    </target>

    <target name="clean" description="cleans up">
        <delete file="${scalac.script.file}" quiet="yes" failonerror="no" />
        <delete file="${scala.script.file}" quiet="yes" failonerror="no" />
        <delete dir="${build.dir}" includeemptydirs="yes" quiet="yes" failonerror="no" />
        <delete dir="${dist.dir}" includeemptydirs="yes" quiet="yes" failonerror="no" />
        <delete>
            <fileset dir="${basedir}" includes="**/*.class" />
        </delete>
    </target>

    <target name="new" description="clean and rebuilds" depends="clean, dist" />
</project>
